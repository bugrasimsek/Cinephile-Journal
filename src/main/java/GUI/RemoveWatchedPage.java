
package GUI;

import static GUI.Page3.setPosters;
import Journal.Movie;
import MYSQLMethods.MovieDatabaseManager;
import System.SystemClass;
import TmdbApiMethods.MovieScraper;
import info.movito.themoviedbapi.model.MovieDb;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;


public class RemoveWatchedPage extends javax.swing.JFrame {
    String movieNameAdd;
    String watchDateTemp;
    Boolean isWatched = true;
    MovieDatabaseManager movieDatabaseManager = null;
    MovieScraper scraperObj = new MovieScraper();
    ImageIcon doneIcon = new ImageIcon("src/main/resources/gui/12DONE.png");
    
    public RemoveWatchedPage() {
        initComponents();

        movieList.setVisible(false);

        movieTF.setOpaque(false);
        movieTF.setBackground(new java.awt.Color(255, 255, 255, 0));
        movieTF.setFont(new Font("Monsterrat", Font.PLAIN, 14));
        movieTF.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        movieList = new javax.swing.JComboBox<>();
        cancelBT = new javax.swing.JLabel();
        removeBT = new javax.swing.JLabel();
        doneBT = new javax.swing.JLabel();
        poster = new javax.swing.JLabel();
        movieTF = new javax.swing.JTextField();
        page = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        movieList.setMaximumRowCount(10);
        movieList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                movieListItemStateChanged(evt);
            }
        });
        getContentPane().add(movieList, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 260, -1));

        cancelBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBTMouseClicked(evt);
            }
        });
        getContentPane().add(cancelBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 500, 90, 30));

        removeBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBTMouseClicked(evt);
            }
        });
        getContentPane().add(removeBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 100, 30));

        doneBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doneBTMouseClicked(evt);
            }
        });
        getContentPane().add(doneBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 100, 40));
        getContentPane().add(poster, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 250, 375));

        movieTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(movieTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 210, -1));

        page.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        page.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/12.png"))); // NOI18N
        page.setOpaque(true);
        getContentPane().add(page, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 540));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBTMouseClicked
        this.dispose();
    }//GEN-LAST:event_cancelBTMouseClicked

    private void doneBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneBTMouseClicked
        movieList.removeAllItems();
        movieNameAdd = movieTF.getText();
        
        
        
        try {
            movieDatabaseManager = new MovieDatabaseManager();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        ArrayList<String> dbMovieList = null;
        try {
            dbMovieList = movieDatabaseManager.getMovieData(movieNameAdd);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        

        
        for (int i = 0; i < dbMovieList.size(); i++) {
            movieList.addItem(dbMovieList.get(i));
        }
        
        movieTF.setText("");
        page.setIcon(doneIcon);
        removeBT.setVisible(true);
        movieList.setVisible(true);
        
    }//GEN-LAST:event_doneBTMouseClicked


    private void removeBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBTMouseClicked
        if(removeBT.isVisible())
        {
            int indexToDelete = movieList.getSelectedItem().toString().indexOf(" (Watched on: ");
            String properTitle = movieList.getSelectedItem().toString().substring(0, indexToDelete);

            try {
                movieDatabaseManager.removeMovie(properTitle);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
                    
            Page3.setPosters();
            
            System.out.println("REMOVE BUTTON PRESSED");

        }
       
    }//GEN-LAST:event_removeBTMouseClicked

    private void movieListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_movieListItemStateChanged
       int indexToDelete = movieList.getSelectedItem().toString().indexOf(" (Watched on: ");
       String properTitle = movieList.getSelectedItem().toString().substring(0, indexToDelete);
       String currentPoster = "src/main/resources/posters/" + properTitle + "w250.jpg";
       ImageIcon posterIcon = new ImageIcon(currentPoster);
       poster.setIcon(posterIcon);
    }//GEN-LAST:event_movieListItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveWatchedPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveWatchedPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveWatchedPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveWatchedPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveWatchedPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelBT;
    private javax.swing.JLabel doneBT;
    private javax.swing.JComboBox<String> movieList;
    private javax.swing.JTextField movieTF;
    private javax.swing.JLabel page;
    private javax.swing.JLabel poster;
    private javax.swing.JLabel removeBT;
    // End of variables declaration//GEN-END:variables
}
